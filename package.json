{
  "name": "rssmarkable",
  "version": "0.1.0",
  "private": true,
  "engines": {
    "node": "^18.0.0"
  },
  "scripts": {
    "prepare": "husky install",
    "postinstall": "prisma generate",
    "prebuild": "rm -rf .next dist && prisma generate",
    "build": "run-p *:build",
    "next:build": "next build",
    "server:build": "tsc --project tsconfig.server.json",
    "dev": "concurrently --kill-others-on-fail \"npm run docker:start:dev\" \"wait-on tcp:5432 && run-p *:dev\"",
    "next:dev": "dotenv -e .env.development.local -- ts-node --project tsconfig.server.json --transpile-only server.ts",
    "start": "cross-env NODE_ENV=production node dist/server.js",
    "test": "echo Testing...",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "lint": "next lint",
    "lint:interactive": "eslint-interactive \"{src,apps,libs,test}/**/*.{ts,tsx}\"",
    "db:migrate:dev": "dotenv -e .env.development.local -- prisma migrate dev",
    "db:migrate:prod": "prisma migrate deploy",
    "docker:start:dev": "docker compose -f provision/dev/docker-compose.yml up",
    "docker:stop:dev": "docker compose -f provision/dev/docker-compose.yml down",
    "docker:build:dev": "docker compose -f provision/dev/docker-compose.yml build",
    "docker:logs": "docker logs --follow rssmarkable"
  },
  "dependencies": {
    "@headlessui/react": "^1.7.7",
    "@heroicons/react": "^2.0.13",
    "@hookform/resolvers": "^2.9.10",
    "@next-auth/prisma-adapter": "^1.0.5",
    "@prisma/client": "^4.5.0",
    "@tanstack/react-query": "4.29.1",
    "@trpc/client": "10.19.1",
    "@trpc/next": "10.19.1",
    "@trpc/react-query": "10.19.1",
    "@trpc/server": "10.19.1",
    "bcrypt": "^5.1.0",
    "clsx": "^1.2.1",
    "dayjs": "^1.11.7",
    "framer-motion": "^10.0.0",
    "ioredis": "5.3.1",
    "marked": "4.3.0",
    "next": "13.4.5",
    "next-auth": "^4.20.1",
    "next-pwa": "^5.6.0",
    "next-seo": "^5.15.0",
    "puppeteer-core": "^19.4.1",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "react-hook-form": "^7.41.3",
    "react-hot-toast": "^2.4.0",
    "rmapi-js": "^2.0.0",
    "rss-parser": "^3.13.0",
    "rss-to-json": "^2.1.0",
    "sharp": "0.32.1",
    "superjson": "1.9.1",
    "tailwind-merge": "^1.8.1",
    "uuid4": "^2.0.3",
    "webpack": "5.78.0",
    "ws": "^8.13.0",
    "zod": "^3.18.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^17.4.2",
    "@commitlint/config-conventional": "^17.4.2",
    "@flydotio/dockerfile": "0.2.11",
    "@svgr/webpack": "^6.5.1",
    "@tailwindcss/forms": "^0.5.3",
    "@types/bcrypt": "^5.0.0",
    "@types/jest": "^29.2.5",
    "@types/marked": "4.0.8",
    "@types/next-pwa": "^5.6.2",
    "@types/node": "^18.0.0",
    "@types/prettier": "^2.7.2",
    "@types/react": "^18.0.14",
    "@types/react-dom": "^18.0.5",
    "@types/uuid4": "^2.0.0",
    "@types/ws": "^8.5.4",
    "@typescript-eslint/eslint-plugin": "^5.33.0",
    "@typescript-eslint/parser": "^5.33.0",
    "autoprefixer": "^10.4.7",
    "concurrently": "^7.6.0",
    "cross-env": "7.0.3",
    "dotenv-cli": "^6.0.0",
    "eslint": "^8.26.0",
    "eslint-config-next": "13.1.1",
    "eslint-interactive": "^10.3.0",
    "husky": "^8.0.0",
    "jest": "^29.3.1",
    "lint-staged": "^13.1.0",
    "npm-run-all": "4.1.5",
    "postcss": "^8.4.14",
    "prettier": "^2.8.1",
    "prettier-plugin-tailwindcss": "^0.2.1",
    "prisma": "^4.5.0",
    "tailwindcss": "^3.2.0",
    "ts-jest": "^29.0.3",
    "ts-node": "10.9.1",
    "typescript": "^4.9.4",
    "wait-on": "^7.0.1"
  },
  "ct3aMetadata": {
    "initVersion": "6.11.5"
  },
  "lint-staged": {
    "src/**/*.{js,ts,jsx,tsx}": [
      "eslint --fix",
      "prettier --write \"**/*.{ts,tsx,md}\""
    ],
    "*.json": [
      "prettier --write"
    ]
  },
  "jest": {
    "moduleNameMapper": {
      "^src/(.*)$": "<rootDir>/src/$1"
    },
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup-jest.ts"
    ],
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node"
  }
}
