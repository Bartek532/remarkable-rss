name: Deployment

on:
  push:
    # branches: [main]
    branches: [develop]

env:
  NODE_VERSION: 20.x

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  db:
    name: ‚öôÔ∏è Setup database
    runs-on: ubuntu-latest
    environment: Production
    if: ${{false}}
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
      SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
      GITHUB_CLIENT_ID: ${{ secrets.SUPABASE_GITHUB_CLIENT_ID }}
      GITHUB_CLIENT_SECRET: ${{ secrets.SUPABASE_GITHUB_CLIENT_SECRET }}
      GOOGLE_CLIENT_ID: ${{ secrets.SUPABASE_GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.SUPABASE_GOOGLE_CLIENT_SECRET }}

    steps:
      - name: ‚úÖ Checkout code
        uses: actions/checkout@v4

      - name: üî® Setup
        uses: ./.github/workflows/setup
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: ‚ö° Setup Supabase CLI
        uses: supabase/setup-cli@v1

      # - name: üîó Link
      #   run: pnpm run db:link -- --db-url $SUPABASE_DB_URL

      - name: üì¶ Migrate
        run: pnpm run db:migrate:deploy -- --db-url $SUPABASE_DB_URL

  web:
    name: üöÄ Deploy web
    runs-on: ubuntu-latest
    environment: Production
    needs: db
    if: ${{ false  }}
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - name: ‚úÖ Checkout code
        uses: actions/checkout@v4

      - name: üî® Setup
        uses: ./.github/workflows/setup
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: üîº Install Vercel CLI
        run: pnpm install --global vercel@latest

      - name: üí™ Pull environment information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: üì¶ Build
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: üí® Deploy!
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  sync:
    name: üöÄ Deploy sync
    runs-on: ubuntu-latest
    environment: Production
    needs: db

    steps:
      - name: ‚úÖ Checkout code
        uses: actions/checkout@v4

      - name: üî® Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: üí® Fly!
        run: flyctl deploy --remote-only -c ./provision/prod/sync/fly.toml
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  extension:
    name: üöÄ Deploy extension
    runs-on: ubuntu-latest
    environment: Production
    # needs: db
    env:
      EXTENSION_ID: ${{ secrets.EXTENSION_ID }}
      CLIENT_ID: ${{ secrets.EXTENSION_GOOGLE_CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.EXTENSION_GOOGLE_CLIENT_SECRET }}
      REFRESH_TOKEN: ${{ secrets.EXTENSION_GOOGLE_REFRESH_TOKEN }}

    steps:
      - name: ‚úÖ Checkout code
        uses: actions/checkout@v4

      - name: üî® Setup
        uses: ./.github/workflows/setup
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: üì¶ Build
        run: pnpm run build:extension

      - name: üóúÔ∏è Zip
        run: (cd apps/extension/dist && zip -r "$OLDPWD/syncreads-extension-${{ github.sha }}.zip" .)

      - name: üóÉÔ∏è Archive
        uses: actions/upload-artifact@v4
        with:
          name: syncreads-extension-${{ github.sha }}
          path: syncreads-extension-${{ github.sha }}.zip

      - name: Install webstore CLI
        run: pnpm install --global chrome-webstore-upload-cli

      - name: Deploy extension
        run: chrome-webstore-upload upload --source syncreads-extension-${{ github.sha }}.zip
